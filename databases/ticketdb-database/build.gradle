import org.flywaydb.gradle.FlywayExtension
import org.flywaydb.gradle.task.FlywayMigrateTask

buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.postgresql:postgresql:9.4.1211.jre7'
        classpath 'nu.studer:gradle-jooq-plugin:1.0.5'
        classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.0.3"
    }
}
apply from: "../../java.gradle"
apply from: "../db.gradle"

dependencies {
    compile "mysql:mysql-connector-java:$mysqlVersion"
    compile('org.flywaydb:flyway-core:4.0.3')
}
/*

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
}
*/


/*dependencies {
    compile "mysql:mysql-connector-java:$mysqlVersion"
}*/

flyway {
    url = "jdbc:mysql://localhost:3306/albums?useSSL=false"
    user = "root"
    outOfOrder = false
}

def tunnelProcess

task openTunnel {
    doLast {
        println 'Opening Tunnel'
        Thread.start {
            tunnelProcess = "cf ssh -N -L 63306:${getMysqlHost("album-service")}:3306 album-service".execute()
        }

        sleep 5_000L
    }
}

task closeTunnel {
    doLast {
        println 'Closing Tunnel'
        tunnelProcess.destroy()
    }
}

task cfMigrate(type: FlywayMigrateTask, dependsOn: openTunnel) {
    if (System.env.CF_MIGRATE) {
        extension = setupProdFlywayExtension(new FlywayExtension(), "album-service")
    }
}

cfMigrate.finalizedBy closeTunnel